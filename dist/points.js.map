{"version":3,"sources":["../src/points.js"],"names":["_","DistinctPoints","name","changes","legendInfo","last","asc","ts","val","start","ms","push","console","log","length","ctrl","reverse","range","to","until","transitionCount","valToInfo","lastTS","legendCount","maxLegendSize","panel","legendMaxValues","i","pt","s","e","from","has","v","count","elapsed","forEach","value","per","distinctValuesCount","size","isTimeline","orderBy"],"mappings":"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","file":"points.js","sourcesContent":["import _ from \"lodash\";\n\nexport default class DistinctPoints {\n\n  constructor(name) {\n    this.name = name;\n    this.changes = [];\n    this.legendInfo = [];\n\n    // last point we added\n    this.last = null;\n    this.asc = false;\n  }\n\n  // ts numeric ms,\n  // val is the normalized value\n  add( ts, val ) {\n    if(this.last == null) {\n      this.last = {\n        val: val,\n        start: ts,\n        ms: 0\n      };\n      this.changes.push(this.last);\n    }\n    else if(ts == this.last.ts ) {\n      console.log('skip point with duplicate timestamp', ts, val);\n      return;\n    }\n    else {\n      if(this.changes.length === 1) {\n        this.asc = ts > this.last.start;\n      }\n\n      if( (ts > this.last.start) != this.asc ) {\n        console.log('skip out of order point', ts, val);\n        return;\n      }\n\n      // Same value\n      if(val == this.last.val) {\n        if(!this.asc) {\n          this.last.start = ts;\n        }\n      }\n      else {\n        this.last = {\n          val: val,\n          start: ts,\n          ms: 0\n        };\n        this.changes.push(this.last);\n      }\n    }\n  }\n\n  finish(ctrl) {\n    if(this.changes.length<1) {\n      console.log( \"no points found!\" );\n      return;\n    }\n\n\n    if(!this.asc) {\n      this.last = this.changes[0];\n      _.reverse(this.changes);\n    }\n\n    // Add a point beyond the controls\n    if(this.last.start < ctrl.range.to) {\n      var until = ctrl.range.to+1;\n      // var now = Date.now();\n      // if(this.last.start < now && ctrl.range.to > now) {\n      //   until = now;\n      // }\n\n      // This won't be shown, but will keep the count consistent\n      this.changes.push( {\n        val: this.last.val,\n        start: until,\n        ms: 0\n      });\n    }\n\n    this.transitionCount = 0;\n    var valToInfo = {};\n    var lastTS = 0;\n    var legendCount = 0;\n    var maxLegendSize = ctrl.panel.legendMaxValues;\n    if(!maxLegendSize) {\n      maxLegendSize = 20;\n    }\n    var last = this.changes[0];\n    for(var i=1; i<this.changes.length; i++) {\n      var pt = this.changes[i];\n\n      var s = last.start;\n      var e = pt.start;\n      if( s < ctrl.range.from ) {\n        s = ctrl.range.from;\n      }\n      else if(s<ctrl.range.to) {\n        this.transitionCount++;\n      }\n\n      if( e > ctrl.range.to ) {\n        e = ctrl.range.to;\n      }\n\n      last.ms = e - s;\n      if(last.ms>0) {\n        if(_.has(valToInfo, last.val)) {\n          var v = valToInfo[last.val];\n          v.ms += last.ms;\n          v.count++;\n        }\n        else {\n          valToInfo[last.val] = { 'val': last.val, 'ms': last.ms, 'count':1 };\n          legendCount++;\n        }\n      }\n      last = pt;\n    }\n\n    var elapsed = ctrl.range.to - ctrl.range.from;\n    this.elapsed = elapsed;\n\n    _.forEach(valToInfo, (value) => {\n      value.per = (value.ms/elapsed);\n      this.legendInfo.push( value );\n    });\n    this.distinctValuesCount = _.size(this.legendInfo);\n\n\n    if(!ctrl.isTimeline) {\n      this.legendInfo = _.orderBy( this.legendInfo, ['ms'], ['desc'] );\n    }\n    //console.log( \"FINISH\", this );\n  }\n}\n"]}